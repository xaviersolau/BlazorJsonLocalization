@using System.Globalization

@inherits LayoutComponentBase

@inject IStringLocalizer<SharedResource> shared

<div class="page">

    @if (reload)
    {
        <div class="main">
            Loading...
       </div>
    }
    else
    {
        <div class="sidebar">
            <NavMenu />
        </div>

        <div class="main">
            <div class="top-row px-4">
                <div class="col-auto px-4">
                    <button class="btn btn-primary" @onclick="SetCultureInfoFr">fr-FR</button>
                </div>
                <div class="col-auto px-4">
                    <button class="btn btn-primary" @onclick="SetCultureInfoEn">en-US</button>
                </div>
                <div class="col-auto px-4">
                    <a href="http://blazor.net" target="_blank" class="ml-md-auto">@shared["About"]</a>
                </div>
            </div>
            <div class="content px-4">
                @Body
            </div>
        </div>
    }

</div>

@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

@code
{
    private const string LanguageKey = "language";

    protected override void OnInitialized()
    {
        if (localStorage.ContainKey(LanguageKey))
        {
            var ci = CultureInfo.GetCultureInfo(localStorage.GetItemAsString(LanguageKey));

            CultureInfo.DefaultThreadCurrentUICulture = ci;
        }

        base.OnInitialized();
    }

    private Task SetCultureInfoFr()
    {
        return SetCultureInfo("fr-FR");
    }

    private Task SetCultureInfoEn()
    {
        return SetCultureInfo("en-US");
    }

    bool reload = false;

    private async Task SetCultureInfo(string name)
    {
        var ci = CultureInfo.GetCultureInfo(name);

        CultureInfo.DefaultThreadCurrentUICulture = ci;

        localStorage.SetItemAsString(LanguageKey, name);

        reload = true;
        StateHasChanged();

        await Task.Yield();

        reload = false;
        StateHasChanged();
    }
}
